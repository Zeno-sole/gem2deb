These enhancement ideas are listed in no particular order.

do not stop running tests after the first failing test suite
============================================================

Currently dh_ruby will stop after the first test suite fails, i.e. if the test
suite fails under ruby 1.9.1, it will not run under ruby 2.0. Instead, dh_ruby
should run all tests, and fail if any of them fail, but still run all of them.

dh_ruby: solve the --install X the world situation
==================================================

Currently, everything that dh_ruby does happens during `dh_ruby --install`.
--configure, --build and --test are no-ops. We should either fix this, or
remove these actions and leave only --install and --clean (and make --install
the default so that we can call just `dh_ruby`).

Support Rubinius
================

This includes both installing stuff to be used by Rubinius, including
extensions, and being able to run gem2deb under Rubinius. See the `rake test`
lines in debian/rules, we should add one like that for Rubinius.

Support JRuby
=============

This includes both installing stuff to be used by JRuby, including
extensions, and being able to run gem2deb under JRuby. See the `rake test`
lines in debian/rules, we should add one like that for JRuby.

increase the coverage of the test suite
=======================================

We should packages simplecov (http://rubygems.org/gems/simplecov), run it
against gem2deb, and find places that are not covered by the test suite.

Also, some places might be being run, but not checked at all. One example
if the code that handles XS-Ruby-Versions.

Make the debhelper ruby buildsystem trigger automatically
=========================================================

This way we don't need to pass `--buildsystem=ruby --with ruby` to dh in
debian/rules. It should build automatically the sources root contains either
metadata.yml, *.gemspec. To get full automation, the buildsystem should be
included in debhelper.
